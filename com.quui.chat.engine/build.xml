<!-- Hollala Core Build File -->
<project name="hollala.core" default="deploy" basedir=".">

	<!-- Folders: the project setup -->
	<property name="build.dir" location="build" />
	<property name="build.prod.dir" location="${build.dir}/prod-classes" />
	<property name="build.test.dir" location="${build.dir}/test-classes" />
	<property name="build.dist.dir" location="${build.dir}/dist" />
	<property name="reports.dir" location="${build.dir}/tests/reports" />
	<property name="summary.dir" location="${build.dir}/tests/summary" />
	<property name="doc.dir" location="${build.dir}/doc" />
	<property name="src.dir" location="src-java" />
	<property name="test.dir" location="src-java-tests" />
	<property name="lib.dir" location="lib" />
	<property name="base.package" value="com.quui.chat" />
	
	<!-- Deployment config -->
	<property name="deploy.dir" location="../${base.package}.irc/lib" />
	<property name="jar.name" value="hollala-core" />
	<property name="main.class" value="com.quui.chat.ConsoleBot" />

	<!-- Java version config: -->
	<property name="ant.java.version" value="1.5" />

	<!-- The classpath: where the classes are to be found -->
	<path id="project.classpath">
		<pathelement location="${build.prod.dir}" />
		<pathelement location="${build.test.dir}" />
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<!-- Prepare the build: create folders -->
	<target name="prepare">
		<mkdir dir="${build.prod.dir}" />
		<mkdir dir="${build.test.dir}" />
		<mkdir dir="${build.dist.dir}" />
		<mkdir dir="${reports.dir}" />
		<mkdir dir="${summary.dir}" />
	</target>

	<!-- Delete the generated files -->
	<target name="clean">
		<delete includeemptydirs="true" failonerror="no">
			<fileset dir="${build.dir}" includes="**/*" />
			<fileset dir="${reports.dir}" includes="**/*" />
			<fileset dir="${summary.dir}" includes="**/*" />
			<fileset dir="${doc.dir}" includes="**/*" />
		</delete>
	</target>

	<!-- Compile normal sources -->
	<target name="compile" depends="prepare">
		<javac srcdir="${src.dir}" destdir="${build.prod.dir}">
			<classpath refid="project.classpath" />
		</javac>
		<!-- Copy resources to be in classpath -->
		<copy todir="${build.prod.dir}">
			<fileset dir="${src.dir}" excludes="**/*.java" />
		</copy>

	</target>

	<!-- Compile test sources -->
	<target name="compile-tests" depends="compile">
		<javac srcdir="${test.dir}" destdir="${build.test.dir}">
			<classpath refid="project.classpath" />
		</javac>
	</target>

	<!-- Build a distribution jar-->
	<target name="jar" depends="compile">
		<jar destfile="${build.dist.dir}/${jar.name}.jar" basedir="${build.prod.dir}">
			<manifest>
				<attribute name="Main-Class" value="${main.class}" />
			</manifest>
		</jar>
	</target>

	<!-- Deploy our jar and the libraries -->
	<target name="deploy" depends="jar">
		<copy todir="${deploy.dir}">
			<!-- deploy our jars -->
			<fileset dir="${build.dist.dir}" casesensitive="yes">
				<include name="*.jar" />
			</fileset>
			<!-- deploy required jars (only top level jars) -->
			<fileset dir="${lib.dir}" casesensitive="yes">
				<include name="*.jar" />
			</fileset>
		</copy>
	</target>

	<!-- Run the tests -->
	<target name="test" depends="compile-tests">
		<junit haltonfailure="no" printsummary="true">
			<classpath refid="project.classpath" />
			<batchtest todir="${reports.dir}">
				<formatter type="xml" />
				<!--We run only the suites containing 'Exercise' in their name-->
				<fileset dir="${build.test.dir}" includes="**/*Suite*.class" />
			</batchtest>
		</junit>
	</target>

	<!-- Report the tests -->
	<target name="test-report" depends="test">
		<!-- collect the results into a summary report -->
		<junitreport todir="${summary.dir}">
			<fileset dir="${reports.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${summary.dir}" />
		</junitreport>
		<echo message="Wrote summary test report to: ${summary.dir}" />
	</target>

	<!-- Generate javadoc documentation-->
	<target name="doc">
		<!-- the classpathref is an important detail here; without it we hit this bug: 
	        http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6442982 -->
		<javadoc classpathref="project.classpath" packagenames="${base.package}.*" sourcepath="${src.dir}" destdir="${doc.dir}">
		</javadoc>
	</target>
</project>
